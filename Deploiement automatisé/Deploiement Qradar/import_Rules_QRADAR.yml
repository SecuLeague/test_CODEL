--
- name: Vérifier le statut du job Jenkins et gérer les interfaces Proxmox
  hosts: localhost
  gather_facts: no

  vars:
    vault_addr: "http://10.10.150.2:8200"
    vault_token: "{{ lookup('env', 'VAULT_TOKEN') }}"  # Assurez-vous que VAULT_TOKEN est défini dans votre environnement
    job_name: "CODEL1.0.0- Import Rules QRADAR"  # Job name que vous avez fourni

  tasks:
    - name: Récupérer les secrets depuis Vault (KV v2)
      community.hashi_vault.vault_read:
        path: "secret/data/jenkins_proxmox"  # Chemin correct avec 'data' pour KV v2
        url: "{{ vault_addr }}"
        token: "{{ vault_token }}"
      register: secrets

    - name: Afficher les secrets récupérés de Vault pour débogage
      debug:
        msg: "{{ secrets }}"

    - name: Définir les variables sensibles à partir de Vault
      set_fact:
        jenkins_user: "{{ secrets.data.data.data.jenkins_user }}"
        jenkins_api_token: "{{ secrets.data.data.data.jenkins_api_token }}"
        proxmox_host: "{{ secrets.data.data.data.proxmox_host }}"
        proxmox_node: "{{ secrets.data.data.data.proxmox_node }}"
        jenkins_url: "{{ secrets.data.data.data.jenkins_url }}"
        api_endpoint: "{{ secrets.data.data.data.jenkins_url }}/job/{{ job_name | urlencode }}/lastBuild/api/json"

    - name: Obtenir le statut du job Jenkins
      uri:
        url: "{{ api_endpoint }}"
        method: GET
        return_content: yes
        status_code: 200
        user: "{{ jenkins_user }}"
        password: "{{ jenkins_api_token }}"
        force_basic_auth: yes
      register: jenkins_response

    - name: Vérifier si le job a échoué
      set_fact:
        job_failed: "{{ jenkins_response.json.result == 'FAILURE' }}"

    - name: Afficher le statut du job Jenkins
      debug:
        msg: "Le job Jenkins '{{ job_name }}' a {% if job_failed %}échoué{% else %}réussi{% endif %}."

    - name: Forcer l'échec du playbook si le job a échoué
      fail:
        msg: "Le job Jenkins '{{ job_name }}' a échoué."
      when: job_failed

    - name: Afficher un message de succès si tout s'est bien passé
      debug:
        msg: "Le job Jenkins a réussi et aucune action supplémentaire n'est nécessaire."
      when: not job_failed

