---
- name: Vérifier le statut du job Jenkins et gérer les interfaces Proxmox
  hosts: localhost
  gather_facts: no

  vars:
    jenkins_url: "http://192.168.150.10:8080"
    job_name: "CODEL 1.0.0 -Create Template NACER"
    api_endpoint: "{{ jenkins_url }}/job/{{ job_name | urlencode }}/lastBuild/consoleText/api/json"
    jenkins_user: "amal"
    jenkins_api_token: "11e6cdba6083554658c8463aaecbe80e10"
    proxmox_host: "185.246.85.24"
    proxmox_node: "frhb89946ds"

  tasks:
    # Debugging the constructed API endpoint
    - name: Afficher l'API endpoint générée
      debug:
        msg: "API Endpoint : {{ api_endpoint }}"

    # Test Jenkins API using curl for debugging
    - name: Tester l'API Jenkins avec curl
      command: >
        curl --user {{ jenkins_user }}:"{{ jenkins_api_token }}"
        "{{ api_endpoint }}"
      register: curl_response
      ignore_errors: yes

    # Debugging the response from curl
    - name: Afficher la réponse de la commande curl
      debug:
        var: curl_response.stdout

    # Check if the curl command succeeded or failed
    - name: Vérifier si la commande curl a réussi
      fail:
        msg: "La commande curl a échoué avec le message suivant : {{ curl_response.stderr }}"
      when:
        - curl_response.rc != 0

    # Fetch the Jenkins job log using Ansible's uri module
    - name: Obtenir le statut du log du job Jenkins via l'API REST
      uri:
        url: "{{ api_endpoint }}"
        method: GET
        return_content: yes
        status_code: 200
        user: "{{ jenkins_user }}"
        password: "{{ jenkins_api_token }}"
        force_basic_auth: yes
      register: jenkins_response

    # Check if the API request succeeded or failed (HTTP status code)
    - name: Vérifier la réponse API Jenkins
      fail:
        msg: "Erreur lors de la requête API Jenkins : {{ jenkins_response.msg }}"
      when:
        - jenkins_response.status != 200

    # Determine if the Jenkins job succeeded based on its output
    - name: Vérifier si le job a réussi
      set_fact:
        job_success: "{{ 'Finished: SUCCESS' in jenkins_response.content }}"

    # Display the status of the Jenkins job (success or failure)
    - name: Afficher le statut du job Jenkins
      debug:
        msg:
          Le job Jenkins '{{ job_name }}' a {% if job_success %}réussi{% else %}échoué{% endif %}.
