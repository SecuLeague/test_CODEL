---
- name: Vérifier l'installation de Zabbix
  hosts: localhost
  gather_facts: no
  become: yes
  vars:
    vault_token: "{{ lookup('env', 'VAULT_TOKEN') }}"
    vault_addr: "{{ lookup('ansible.builtin.env', 'VAULT_ADDR') }}"

  tasks:
    - name: Récupérer les secrets depuis Vault
      community.hashi_vault.vault_read:
        url: "{{ vault_addr }}"
        token: "{{ vault_token }}"
        path: secret/data/all_vars
      register: vault_secrets

    - name: Définir les variables à partir des secrets Vault
      set_fact:
        ansible_ssh_common_args: "{{ vault_secrets.data.data.ansible_ssh_common_args | default('') }}"
        ansible_become_password: "{{ vault_secrets.data.data.ansible_become_password | default('') }}"
        ansible_ssh_pass: "{{ vault_secrets.data.data.ansible_ssh_pass | default('') }}"

    # Debug : Afficher les valeurs récupérées depuis Vault
    - name: Debug - Afficher ansible_ssh_common_args
      debug:
        msg: "{{ ansible_ssh_common_args }}"

    - name: Debug - Afficher ansible_become_password
      debug:
        msg: "{{ ansible_become_password }}"

    - name: Debug - Afficher ansible_ssh_pass
      debug:
        msg: "{{ ansible_ssh_pass }}"

    # Vérifier si le package Zabbix est installé
    - name: Vérifier si le package Zabbix est installé
      ansible.builtin.command: rpm -q zabbix-agent
      register: zabbix_installed
      changed_when: false
      failed_when: false

    # Vérifier si le service Zabbix est en cours d'exécution
    - name: Vérifier si le service Zabbix est en cours d'exécution
      ansible.builtin.systemd:
        name: zabbix-agent
        state: started
      check_mode: yes
      register: zabbix_service
      failed_when: false

    # Afficher les résultats
    - name: Afficher le résultat
      ansible.builtin.debug:
        msg:
          - "Zabbix est installé: {{ zabbix_installed.rc == 0 }}"
          - "Le service Zabbix est en cours d'exécution: {{ zabbix_service.changed == false }}"
